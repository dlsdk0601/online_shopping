import { MigrationInterface, QueryRunner } from "typeorm";

export class Migration1695896984371 implements MigrationInterface {
    name = 'Migration1695896984371'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE "payment_cancel_history" ("pk" SERIAL NOT NULL, "cancel_amount" integer NOT NULL, "cancel_reason" character varying(256) NOT NULL, "tax_free_amount" integer NOT NULL, "tax_exemption_amount" integer NOT NULL, "refundable_amount" integer NOT NULL, "easy_pay_discount_amount" integer NOT NULL, "canceled_at" TIMESTAMP WITH TIME ZONE NOT NULL, "transaction_key" character varying(64) NOT NULL, "receipt_key" character varying(256) NOT NULL, "toss_payment_approve_pk" integer NOT NULL, CONSTRAINT "REL_408df0bfb6430c1ae5c192b2ac" UNIQUE ("toss_payment_approve_pk"), CONSTRAINT "PK_0de019f579bae0c689a9b52cd2e" PRIMARY KEY ("pk")); COMMENT ON COLUMN "payment_cancel_history"."pk" IS 'pk'; COMMENT ON COLUMN "payment_cancel_history"."cancel_amount" IS '결제를 취소한 금액'; COMMENT ON COLUMN "payment_cancel_history"."cancel_reason" IS '결제를 취소한 이유'; COMMENT ON COLUMN "payment_cancel_history"."tax_free_amount" IS '취소된 금액 중 면세 금액'; COMMENT ON COLUMN "payment_cancel_history"."tax_exemption_amount" IS '취소된 금액 중 과세 제외 금액(컵 보증금 등)'; COMMENT ON COLUMN "payment_cancel_history"."refundable_amount" IS '결제 취소 후 환불 가능한 잔액'; COMMENT ON COLUMN "payment_cancel_history"."easy_pay_discount_amount" IS '간편결제 서비스의 포인트, 쿠폰, 즉시할인과 같은 적립식 결제수단에서 취소된 금액'; COMMENT ON COLUMN "payment_cancel_history"."canceled_at" IS '결제 취소가 일어난 날짜와 시간 정보'; COMMENT ON COLUMN "payment_cancel_history"."transaction_key" IS '취소 건의 키 값'; COMMENT ON COLUMN "payment_cancel_history"."receipt_key" IS '취소 건의 현금영수증 키 값'; COMMENT ON COLUMN "payment_cancel_history"."toss_payment_approve_pk" IS 'pk'`);
        await queryRunner.query(`CREATE TABLE "toss_payment_easypay" ("pk" SERIAL NOT NULL, "provider" character varying(32) NOT NULL, "amount" integer NOT NULL, "discount_amount" integer NOT NULL, "toss_payment_approve_pk" integer NOT NULL, CONSTRAINT "REL_5558a9a7ea307393f90b1ac17e" UNIQUE ("toss_payment_approve_pk"), CONSTRAINT "PK_e6bf15450901fe7f5495407d68b" PRIMARY KEY ("pk")); COMMENT ON COLUMN "toss_payment_easypay"."pk" IS 'pk'; COMMENT ON COLUMN "toss_payment_easypay"."provider" IS '선택한 간편결제사 코드'; COMMENT ON COLUMN "toss_payment_easypay"."amount" IS '간편결제 서비스에 등록된 계좌 혹은 현금성 포인트로 결제한 금액'; COMMENT ON COLUMN "toss_payment_easypay"."discount_amount" IS '간편결제 서비스의 적립 포인트나 쿠폰 등으로 즉시 할인된 금액'; COMMENT ON COLUMN "toss_payment_easypay"."toss_payment_approve_pk" IS 'pk'`);
        await queryRunner.query(`CREATE TYPE "public"."toss_payment_virtual_account_refund_status_enum" AS ENUM('NONE', 'PENDING', 'FAILED', 'PARTIAL_FAILED', 'COMPLETED')`);
        await queryRunner.query(`CREATE TYPE "public"."toss_payment_virtual_account_settlement_status_enum" AS ENUM('INCOMPLETED', 'COMPLETED')`);
        await queryRunner.query(`CREATE TABLE "toss_payment_virtual_account" ("pk" SERIAL NOT NULL, "account_type" character varying(16) NOT NULL, "accountN_number" character varying(32) NOT NULL, "bank_code" character varying(4) NOT NULL, "customer_name" character varying(124) NOT NULL, "due_date" TIMESTAMP WITH TIME ZONE NOT NULL, "refund_status" "public"."toss_payment_virtual_account_refund_status_enum" NOT NULL, "expired" boolean NOT NULL, "settlement_status" "public"."toss_payment_virtual_account_settlement_status_enum" NOT NULL, "toss_payment_approve_pk" integer NOT NULL, CONSTRAINT "REL_3d3842b1ad51403a88dd73856d" UNIQUE ("toss_payment_approve_pk"), CONSTRAINT "PK_62c1ac7b0443668ec87cd8984f6" PRIMARY KEY ("pk")); COMMENT ON COLUMN "toss_payment_virtual_account"."pk" IS 'pk'; COMMENT ON COLUMN "toss_payment_virtual_account"."account_type" IS '가상계좌 타입(일반, 고정 중 하나)'; COMMENT ON COLUMN "toss_payment_virtual_account"."accountN_number" IS '발급된 계좌번호'; COMMENT ON COLUMN "toss_payment_virtual_account"."bank_code" IS '가상계좌 은행 숫자 코드'; COMMENT ON COLUMN "toss_payment_virtual_account"."customer_name" IS '가상계좌를 발급한 고객 이름'; COMMENT ON COLUMN "toss_payment_virtual_account"."due_date" IS '입금 기한'; COMMENT ON COLUMN "toss_payment_virtual_account"."refund_status" IS '환불 처리 상태'; COMMENT ON COLUMN "toss_payment_virtual_account"."expired" IS '가상계좌가 만료되었는지 여부'; COMMENT ON COLUMN "toss_payment_virtual_account"."settlement_status" IS '정산 상태'; COMMENT ON COLUMN "toss_payment_virtual_account"."toss_payment_approve_pk" IS 'pk'`);
        await queryRunner.query(`CREATE TABLE "toss_payment_failure" ("pk" SERIAL NOT NULL, "code" character varying(64) NOT NULL, "message" character varying(512) NOT NULL, "toss_payment_approve_pk" integer NOT NULL, CONSTRAINT "REL_0fd5ab6695ef1dc38d42397355" UNIQUE ("toss_payment_approve_pk"), CONSTRAINT "PK_cc1ca1ed16eb89b05b86db37d7b" PRIMARY KEY ("pk")); COMMENT ON COLUMN "toss_payment_failure"."pk" IS 'pk'; COMMENT ON COLUMN "toss_payment_failure"."code" IS '에러 코드'; COMMENT ON COLUMN "toss_payment_failure"."message" IS '에러 코드'; COMMENT ON COLUMN "toss_payment_failure"."toss_payment_approve_pk" IS 'pk'`);
        await queryRunner.query(`ALTER TABLE "payment_cancel_history" ADD CONSTRAINT "FK_408df0bfb6430c1ae5c192b2acf" FOREIGN KEY ("toss_payment_approve_pk") REFERENCES "toss_payment_approve"("pk") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "toss_payment_easypay" ADD CONSTRAINT "FK_5558a9a7ea307393f90b1ac17e1" FOREIGN KEY ("toss_payment_approve_pk") REFERENCES "toss_payment_approve"("pk") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "toss_payment_virtual_account" ADD CONSTRAINT "FK_3d3842b1ad51403a88dd73856d2" FOREIGN KEY ("toss_payment_approve_pk") REFERENCES "toss_payment_approve"("pk") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "toss_payment_failure" ADD CONSTRAINT "FK_0fd5ab6695ef1dc38d42397355b" FOREIGN KEY ("toss_payment_approve_pk") REFERENCES "toss_payment_approve"("pk") ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "toss_payment_failure" DROP CONSTRAINT "FK_0fd5ab6695ef1dc38d42397355b"`);
        await queryRunner.query(`ALTER TABLE "toss_payment_virtual_account" DROP CONSTRAINT "FK_3d3842b1ad51403a88dd73856d2"`);
        await queryRunner.query(`ALTER TABLE "toss_payment_easypay" DROP CONSTRAINT "FK_5558a9a7ea307393f90b1ac17e1"`);
        await queryRunner.query(`ALTER TABLE "payment_cancel_history" DROP CONSTRAINT "FK_408df0bfb6430c1ae5c192b2acf"`);
        await queryRunner.query(`DROP TABLE "toss_payment_failure"`);
        await queryRunner.query(`DROP TABLE "toss_payment_virtual_account"`);
        await queryRunner.query(`DROP TYPE "public"."toss_payment_virtual_account_settlement_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."toss_payment_virtual_account_refund_status_enum"`);
        await queryRunner.query(`DROP TABLE "toss_payment_easypay"`);
        await queryRunner.query(`DROP TABLE "payment_cancel_history"`);
    }

}
